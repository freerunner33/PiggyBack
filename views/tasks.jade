
extends pblayout

block stylesheets
	link(rel='stylesheet', href='assets/css/tasks.css')

block content
	section
		a(href='/Piggyback/pickup-task') Create pickup task
		a(href='/Piggyback/dropoff-task') Create dropoff task
		a(href='/Piggyback/assign-task') Assign task
		form#new(method='POST', action='/Piggyback/jobs') 
			h1 Create Job
			div#main
				p Pickup waypoint:
				div#smalldiv
					p *Address (line 1):
					input(type='text', name='pickup_address', required, autocomplete='off', value='3650 Rosecrans St')
					p Address (line 2):
					input(type='text', name='pickup_address2', autocomplete='off')
					p *City:
					input(type='text', name='pickup_city', required, autocomplete='off', value='San Diego')
					p *State:
					input(type='text', name='pickup_state', required, autocomplete='off', value='CA')
					p *Zip:
					input(type='number', name='pickup_zip', required, autocomplete='off', value='92110')
					p *Name (of contact):
					input(type='text', name='pickup_name', required, autocomplete='off', value='Noah')
					p *Phone number (of contact):
					input(type='number', name='pickup_phone', required, autocomplete='off', value='9703084693')
					div#smalldiv
						//- New York Starbucks 40.718923, -74.002546: 405 Broadway New York, NY 10013
						p *Latitude:
						input(type='number', name='pickup_latitude', required, autocomplete='off', value='32.750925')
						p *Longitude:
						input(type='number', name='pickup_longitude', required, autocomplete='off', value='-117.205624')
					p *Arrive at:
					input(type='datetime-local', name='pickup_arrive_at', required, autocomplete='off', value='2016-05-05T12:30')
					p Special Instructions:
					input(type='text', name='pickup_special_instructions', autocomplete='off', value='Noodles & Company order for Noah')
			div#main
				p Dropoff waypoint:
				div#smalldiv
					p *Address (line 1):
					input(type='text', name='dropoff_address', required, autocomplete='off', value='5998 Alcala Park')
					p Address (line 2):
					input(type='text', name='dropoff_address2', autocomplete='off')
					p *City:
					input(type='text', name='dropoff_city', required, autocomplete='off', value='San Diego')
					p *State:
					input(type='text', name='dropoff_state', required, autocomplete='off', value='CA')
					p *Zip:
					input(type='number', name='dropoff_zip', required, autocomplete='off', value='92110')
					p *Name (of contact):
					input(type='text', name='dropoff_name', required, autocomplete='off', value='Noah')
					p *Phone number (of contact):
					input(type='number', name='dropoff_phone', required, autocomplete='off', value='9703084693')
					div#smalldiv
						p *Latitude: 
						input(type='number', name='dropoff_latitude', required, autocomplete='off', value='32.771970')
						p *Longitude:
						input(type='number', name='dropoff_longitude', required, autocomplete='off', value='-117.186308')
					p Special Instructions:
					input(type='text', name='dropoff_special_instructions', autocomplete='off', value='Please dropoff in front of the University Center')
			div#main
				p *Order ID:
				input(type='text', name='order_id', required, value='123example456id')
				p Order Items:
				input(type='text', name='order_items', value='[Buttered Noodles, Pesto Cavatappi]')
				p Order Total:
				input(type='number', step='0.01' name='order_total', value='12.53')
				p Tip:
				input(type='number', step='0.01' name='tip', value='2.00')
				p Support Phone:
				input(type='text', name='support_phone', value='9703084693')
				p Debug
				input(type='number', name='debug')
				button(type='submit') Submit

	h2 Current Tasks:
	ul
		if tasks.length
			each task in tasks
				if task.state < 3
					li Task ID: #{task.id}
					li Task State: #{task.state}
					li Destination:
					ul
						li #{task.destination.address.number} #{task.destination.address.street}
						li #{task.destination.address.city}, #{task.destination.address.state} #{task.destination.address.postalCode}
					li Dependencies: #{task.dependencies}
					li Complete after: #{new Date(task.completeAfter).toISOString()}
					li Complete before: #{new Date(task.completeBefore).toISOString()}
					li
						form(method='POST', action='/Piggyback/delete-task')
							input(type='hidden', name='id', value=task.id)
							button(type='submit') Delete Task
					br
		else
			li No tasks at the moment

	h2 Destinations:
	ul
		if dest.length
			each d in dest
				h3 #{d.name}
				li ID: #{d.id}
				li #{d.number} #{d.street} 
				li #{d.city}, #{d.state} #{d.postalCode}

	//- form#new(method='POST', action='/Piggyback/new-destination')
	//- 	h3 Create new destination
	//- 		p *Name:
	//- 		input(type='text', name='name', required, autocomplete='off')
	//- 		p *Number:
	//- 		input(type='number', name='number', required, autocomplete='off')
	//- 		p *Street:
	//- 		input(type='text', name='street', required, autocomplete='off')
	//- 		p Apartment:
	//- 		input(type='text', name='apartment', autocomplete='off')
	//- 		p *City:
	//- 		input(type='text', name='city', required, autocomplete='off')
	//- 		p State:
	//- 		input(type='text', name='state', autocomplete='off')
	//- 		p Postal Code:
	//- 		input(type='number', name='postalCode', autocomplete='off')
	//- 		p *Country:
	//- 		input(type='text', name='country', required, autocomplete='off')
	//- 		button(type='submit') Submit
		
	//- form#new(method='POST', action='/Piggyback/new-task')
	//- 	h3 Create new task:
	//- 	p Company:
	//- 	input(type='text', name='company', required, autocomplete='off')
	//- 	p Driver Tip:
	//- 	input(type='number', step='0.01', name='driverTip', autocomplete='off')
	//- 	p Destination:
	//- 	input(type='text', name='destination', required, autocomplete='off', value='IWU6PFSVyLhAbifvh3KnDxnZ')
	//- 	p Recipient:
	//- 	input(type='text', name='recipients', autocomplete='off')
	//- 	p Complete After:
	//- 	input(type='time', name='completeAfter')
	//- 	p Complete Before:
	//- 	input(type='time', name='completeBefore')
	//- 	p Pickup Task?
	//- 	input(type='checkbox', name='pickupTask')
	//- 	p Dependencies:
	//- 	input(type='text', name='dependencies', placeholder='Task IDs', autocomplete='off')
	//- 	p Task Notes:
	//- 	input(type='text', name='notes', placeholder='Notes', autocomplete='off')
	//- 	br
	//- 	button(type='submit') Submit
