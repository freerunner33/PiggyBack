
extends pblayout

block stylesheets
	link(rel='stylesheet', href='assets/css/large.css')
	link(rel='stylesheet', href='assets/css/small.css')

block content
	div#leftcontainer
		a(href='/PiggyBack/sendwebhook') Send Webhook to Onfleet
		a(href='/PiggyBack/getWorkers') Get workers on Test team
		h2 Organization Details:
		ul
			li Name: #{orgName}
			li ID: #{orgID}
			li Email: #{orgEmail}
		h2 Team Details:
		ul
			li Name: #{teamName}
			li ID: #{teamID}
		h3 Workers:
		ul
			if teamWorkers.length
				each w in teamWorkers
					li Name: #{w.name}
					li Phone: #{w.phone}
					li ID: #{w.id}
					li 
						form(method='POST', action='/PiggyBack/delete-worker')
							input(type='hidden', name='id', value=w.id)
							button(type='submit') Delete Worker
					li
						form(method='POST', action='/PiggyBack/update-worker')
							input(type='text', name='name', placeholder='Employee Name', autocomplete='off')
							input(type='hidden', name='id', value=w.id)
							button(type='submit') Update Worker
					br
			else
				li No workers in #{teamName}

		form#new(method='POST', action='/PiggyBack/new-worker')
			h3 Create new worker on test team:
			p Employee Name
			input(type='text', name='name', autocomplete='off')
			p Phone Number
			input(type='text', name='number', autocomplete='off')
			br
			button(type='submit') Submit

		form#new(method='POST', action='/PiggyBack/new-destination')
			h3 Create New Destination:
			p Name:
			input(type='text', name='name')
			p Number:
			input(type='number', name='number', required)
			p Street:
			input(type='text', name='street', required)
			p Apartment:
			input(type='text', name='apartment')
			p City:
			input(type='text', name='city', required)
			p State:
			input(type='text', name='state')
			p Postal Code:
			input(type='number', name='postalCode')
			p Country:
			input(type='text', name='country', required)
			button(type='submit') Submit
	
	div#rightcontainer
		h2 Destination Details: 
		ul
			li ID: #{destination.id}
			li Address:
			ul
				li Name: #{destination.address.name}
				li Number: #{destination.address.number}
				li Street: #{destination.address.street}
				li Apartment: #{destination.address.apartment}
				li City: #{destination.address.city}
				li State: #{destination.address.state}
				li Postal Code: #{destination.address.postalCode}
				li Country: #{destination.address.country}

		h2 Current Tasks:
		ul
			if tasks.length
				each task in tasks
					li Task ID: #{task.id}
					li Task State: #{task.state}
					li Destination:
					ul
						li #{task.destination.address.number} #{task.destination.address.street}
						li #{task.destination.address.city}, #{task.destination.address.state} #{task.destination.address.postalCode}
					br
			else
				li No tasks at the moment
		
		form#new(method='POST', action='/PiggyBack/new-task')
			h3 Create new task:
			p Company:
			input(type='text', name='company', required, autocomplete='off')
			p Driver Tip:
			input(type='number', step='0.01', name='driverTip', autocomplete='off')
			p Destination:
			input(type='text', name='destination', required, autocomplete='off')
			p Recipient:
			input(type='text', name='recipients', autocomplete='off')
			p Complete After:
			input(type='time', name='completeAfter')
			p Complete Before:
			input(type='time', name='completeBefore')
			p Pickup Task?
			input(type='checkbox', name='pickupTask')
			p Dependencies:
			input(type='text', name='dependencies', placeholder='Task IDs', autocomplete='off')
			p Task Notes:
			input(type='text', name='notes', placeholder='Notes', autocomplete='off')
			br
			button(type='submit') Submit
